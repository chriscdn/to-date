{"version":3,"file":"to-date.module.js","sources":["../src/index.ts"],"sourcesContent":["const isLikelyMicroseconds = (n: number) => Math.log10(n) >= 13;\nconst isLikelyMilliseconds = (n: number) => Math.log10(n) >= 10;\n\nconst isDate = (object: unknown): object is Date =>\n  object instanceof Date && !isNaN(object.getTime());\n\nenum EpochUnit {\n  BESTGUESS,\n  SECONDS,\n  MILLISCONDS,\n  MICROSECONDS,\n}\n\ntype TValue = Date | string | number | null | undefined;\n\n// We're guaranteed a Date return value if the input is a number or Date.\ntype TReturnValue<T> = T extends Date | number ? Date\n  : Date | undefined;\n\nconst toDate = <T extends TValue>(\n  value: T,\n  epochUnit = EpochUnit.BESTGUESS,\n): TReturnValue<T> => {\n  if (isDate(value)) {\n    return value;\n  } else if (typeof value === \"string\") {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#date_time_string_format\n    const _d = new Date(value);\n    return (isDate(_d) ? _d : undefined) as TReturnValue<T>;\n  } else if (typeof value === \"number\") {\n    let baseValue!: number;\n\n    // assert value > 0 ?\n\n    switch (epochUnit) {\n      case EpochUnit.BESTGUESS:\n        baseValue = isLikelyMicroseconds(value)\n          ? value / 1000\n          : isLikelyMilliseconds(value)\n          ? value\n          : value * 1000;\n        break;\n      case EpochUnit.SECONDS:\n        baseValue = value * 1000;\n        break;\n      case EpochUnit.MILLISCONDS:\n        baseValue = value;\n        break;\n      case EpochUnit.MICROSECONDS:\n        baseValue = value / 1000;\n        break;\n    }\n\n    return new Date(baseValue);\n  } else {\n    return undefined as TReturnValue<T>;\n  }\n};\n\nexport { EpochUnit, isDate, toDate };\n"],"names":["EpochUnit","isDate","object","Date","isNaN","getTime","toDate","value","epochUnit","BESTGUESS","_d","undefined","baseValue","Math","log10","SECONDS","MILLISCONDS","MICROSECONDS"],"mappings":"AAAA,IAMKA,EAHCC,EAAS,SAACC,GAAe,OAC7BA,aAAkBC,OAASC,MAAMF,EAAOG,UAAU,GAEpD,SAAKL,GACHA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,aAAA,GAAA,cACD,CALD,CAAKA,IAAAA,EAKJ,CAAA,IAQK,IAAAM,EAAS,SACbC,EACAC,GAEA,YAFAA,IAAAA,EAAYR,EAAUS,WAElBR,EAAOM,GACT,OAAOA,KACmB,iBAAVA,EAAoB,CAEpC,IAAMG,EAAK,IAAIP,KAAKI,GACpB,OAAQN,EAAOS,GAAMA,OAAKC,CAC3B,CAAU,GAAiB,iBAAVJ,EAAoB,CACpC,IAAIK,EAIJ,OAAQJ,GACN,KAAKR,EAAUS,UACbG,EApCoCC,KAAKC,MAoCRP,IApCoB,GAqCjDA,EAAQ,IApCwBM,KAAKC,MAqChBP,IArC4B,GAsCjDA,EACQ,IAARA,EACJ,MACF,KAAKP,EAAUe,QACbH,EAAoB,IAARL,EACZ,MACF,KAAKP,EAAUgB,YACbJ,EAAYL,EACZ,MACF,KAAKP,EAAUiB,aACbL,EAAYL,EAAQ,IAIxB,WAAWJ,KAAKS,EACjB,CAGH"}