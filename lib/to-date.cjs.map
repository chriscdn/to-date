{"version":3,"file":"to-date.cjs","sources":["../src/index.ts"],"sourcesContent":["const isLikelyMicroseconds = (n: number) => Math.log10(n) >= 13;\n\nconst isDate = (object: unknown): object is Date =>\n  object instanceof Date && !isNaN(object.getTime());\n\nenum EpochUnit {\n  BESTGUESS,\n  MILLISCONDS,\n  MICROSECONDS,\n}\n\ntype TValue = Date | string | number | null | undefined;\n\n// We're guaranteed a Date return value if the input is a number or Date.\ntype TReturnValue<T> = T extends Date | number ? Date\n  : Date | undefined;\n\nconst toDate = <T extends TValue>(\n  value: T,\n  numberUnit = EpochUnit.BESTGUESS,\n): TReturnValue<T> => {\n  if (isDate(value)) {\n    return value;\n  } else if (typeof value === \"string\") {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#date_time_string_format\n    const _d = new Date(value);\n    return (isDate(_d) ? _d : undefined) as TReturnValue<T>;\n  } else if (typeof value === \"number\") {\n    let baseValue!: number;\n\n    switch (numberUnit) {\n      case EpochUnit.BESTGUESS:\n        baseValue = isLikelyMicroseconds(value) ? value / 1000 : value;\n        break;\n      case EpochUnit.MILLISCONDS:\n        baseValue = value;\n        break;\n      case EpochUnit.MICROSECONDS:\n        baseValue = value / 1000;\n        break;\n    }\n\n    return new Date(baseValue);\n  } else {\n    return undefined as TReturnValue<T>;\n  }\n};\n\nexport { EpochUnit, isDate, toDate };\n"],"names":["EpochUnit","isDate","object","Date","isNaN","getTime","value","numberUnit","BESTGUESS","_d","undefined","baseValue","Math","log10","MILLISCONDS","MICROSECONDS"],"mappings":"AAAA,IAKKA,EAHCC,EAAS,SAACC,GAAe,OAC7BA,aAAkBC,OAASC,MAAMF,EAAOG,UAAU,EAE/CL,QAAAA,eAAAA,GAAAA,EAAAA,QAASA,YAATA,QAASA,UAIb,KAHCA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,aAAA,GAAA,+CASa,SACbM,EACAC,GAEA,QAFAA,IAAAA,IAAAA,EAAaP,QAASA,UAACQ,WAEnBP,EAAOK,GACT,OAAOA,EACE,GAAiB,iBAAVA,EAAoB,CAEpC,IAAMG,EAAK,IAAIN,KAAKG,GACpB,OAAQL,EAAOQ,GAAMA,OAAKC,CAC3B,CAAU,GAAiB,iBAAVJ,EAAoB,CACpC,IAAIK,EAEJ,OAAQJ,GACN,KAAKP,QAASA,UAACQ,UACbG,EAhCoCC,KAAKC,MAgCRP,IAhCoB,GAgCXA,EAAQ,IAAOA,EACzD,MACF,KAAKN,QAASA,UAACc,YACbH,EAAYL,EACZ,MACF,KAAKN,QAAAA,UAAUe,aACbJ,EAAYL,EAAQ,IAIxB,OAAW,IAAAH,KAAKQ,EACjB,CAGH"}